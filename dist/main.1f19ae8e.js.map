{"version":3,"sources":["../pkg/spt_bg.js","../pkg/spt.js","main.js"],"names":["cachegetInt32Memory0","getInt32Memory0","buffer","wasm","memory","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","Uint8Array","getStringFromWasm0","ptr","len","subarray","byte_repr","byte","reverse","retptr","__wbindgen_add_to_stack_pointer","r0","r1","__wbindgen_free","byteRepr","window","onload","input_field","document","getElementById","output","update","innerText","Number","value","btn","addEventListener"],"mappings":";;;;;;ACAA;ADAA,AEAA;ADCA;ACEO,SAAS0B,QAAT,CAAkBP,IAAlB,EAAyC;ADFhD,ACEgD,MAAjBC,OAAiB,uEAAP,KAAO;ADFhD,ADCA,AEEC,IFFGpB,KEEI,eFFgB,GAAG,EEETmB,EFFlB,EEEQ,EAAgBC,OAAhB,CAAP;ADHD,ACIC;ADJD,ADEA,SAASnB,eAAT,GAA2B;ACF3B,ADGI,AEGJ0B,MFHQ3B,AEGF,CAAC4B,MAAP,GAAgB,UFHY,EEGD,GFHM,IAAzB,IAAiC5B,oBAAoB,CAACE,MAArB,KAAgCC,IAAI,CAACC,MAAL,CAAYF,MAAjF,EAAyF;ACH7F,ADIQF,AEGP,IFHOA,EEGH6B,WAAW,GAAGC,IFHS,GAAG,CEGJ,CAACC,EFHO1B,UAAJ,CAAeF,CEG3B,CAAwB,EFHO,CAACC,MAAL,CAAYF,EEGvC,CAAlB,GFH8B,CAAvB;ACJR,ADKK,AEGJ,MAAI8B,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;ADRD;AAAA,ADMI,AEIH,MAAIE,GFJMjC,GEIA,GAAG,SAATiC,KFJD,CEIU,GAAM;AFHnB,AEICD,IAAAA,MAAM,CAACE,SAAP,GAAmBR,QAAQ,CAACS,MAAM,CAACN,WAAW,CAACO,KAAb,CAAP,CAA3B;AACA,GAFD;AFDD,IAAI9B,iBAAiB,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,EAAyB;AAAEC,AEKlD,EFLkDA,IEK9C6B,GAAG,EFLoD,CEKjDP,CFLmD,IAAb,GEK9B,CAACC,cAAT,CAAwB,gBAAxB,CAAV;AFLmEtB,AEOnE4B,EFPmE5B,AEOnE4B,GAAG,CAACC,CFPoE,EAAE,aEO1E,CAAqB,SAArB,EAAgCL,MAAhC;AFPgD,AEQhD,CFRuB,AEHxB,CFGA;AAEA3B,iBAAiB,CAACI,MAAlB;AAEA,IAAIC,oBAAoB,GAAG,IAA3B;;AACA,SAASC,eAAT,GAA2B;AACvB,MAAID,oBAAoB,KAAK,IAAzB,IAAiCA,oBAAoB,CAACT,MAArB,KAAgCC,IAAI,CAACC,MAAL,CAAYF,MAAjF,EAAyF;AACrFS,IAAAA,oBAAoB,GAAG,IAAIE,UAAJ,CAAeV,IAAI,CAACC,MAAL,CAAYF,MAA3B,CAAvB;AACH;;AACD,SAAOS,oBAAP;AACH;;AAED,SAASG,kBAAT,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AAClC,SAAOV,iBAAiB,CAACI,MAAlB,CAAyBE,eAAe,GAAGK,QAAlB,CAA2BF,GAA3B,EAAgCA,GAAG,GAAGC,GAAtC,CAAzB,CAAP;AACH;AACD;;;;;;;AAKO,SAASE,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;AACrC,MAAI;AACA,QAAMC,MAAM,GAAGlB,IAAI,CAACmB,+BAAL,CAAqC,CAAC,EAAtC,CAAf;;AACAnB,IAAAA,IAAI,CAACe,SAAL,CAAeG,MAAf,EAAuBF,IAAvB,EAA6BC,OAA7B;AACA,QAAIG,EAAE,GAAGtB,eAAe,GAAGoB,MAAM,GAAG,CAAT,GAAa,CAAhB,CAAxB;AACA,QAAIG,EAAE,GAAGvB,eAAe,GAAGoB,MAAM,GAAG,CAAT,GAAa,CAAhB,CAAxB;AACA,WAAOP,kBAAkB,CAACS,EAAD,EAAKC,EAAL,CAAzB;AACH,GAND,SAMU;AACNrB,IAAAA,IAAI,CAACmB,+BAAL,CAAqC,EAArC;;AACAnB,IAAAA,IAAI,CAACsB,eAAL,CAAqBF,EAArB,EAAyBC,EAAzB;AACH;AACJ","file":"main.1f19ae8e.js","sourceRoot":"..\\front-end","sourcesContent":["import * as wasm from './spt_bg.wasm';\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n* @param {number} byte\n* @param {boolean} reverse\n* @returns {string}\n*/\nexport function byte_repr(byte, reverse) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.byte_repr(retptr, byte, reverse);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n","import * as wasm from \"./spt_bg.wasm\";\nexport * from \"./spt_bg.js\";","import { byte_repr } from '../pkg/spt';\n\n\nexport function byteRepr(byte, reverse = false) {\n\treturn byte_repr(byte, reverse);\n}\n\nwindow.onload = function() {\n\tlet input_field = document.getElementById(\"byte-input\");\n\tlet output = document.getElementById(\"output\");\n\n\tlet update = () => {\n\t\toutput.innerText = byteRepr(Number(input_field.value));\n\t};\n\n\tlet btn = document.getElementById(\"convert-button\");\n\n\tbtn.addEventListener(\"mouseup\", update);\n}"]}